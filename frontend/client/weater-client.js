

// === LÃ„S IN API-KEY FÃ–R ONLINE-LÃ„GE ===
/* GÃ¶rs nu i api.js, eftersom det Ã¤r backends jobb! */


// === SKA FINNAS FÃ–R BÃ…DE OFFLINE & ONLINE!
// Klass som innehÃ¥ller nycklarna temperature, localTime och country
class WeatherData {
    constructor(temperature, localTime, country, weatherDescriptions) {
        this.temperature = temperature;
        this.localTime = localTime;
        this.country = country;
        this.weatherDescriptions = weatherDescriptions;
    }
}

export async function getWeatherDataFunc (city) {
    
    // === OFFLINE-LÃ„GE ===
    // KOMMENTERA BORT DETTA BLOCK FÃ–R ONLINE:
    const url = `http://localhost:8000/weather`; 
        console.log("ðŸ”µ Online request URL:", url);

        let response = await fetch(url, {method: "POST", body: JSON.stringify({city: city})})
        const weatherObject = await response.json();
        const weather = new WeatherData(
            weatherObject.current.temperature,
            weatherObject.location.localtime,
            weatherObject.location.country,
            weatherObject.current.weather_descriptions[0]
          );

        console.log("âœ… Online weather instance:", weather);
        return weather;
    } 

    // === ONLINE-LÃ„GE ===
    // KOMMENTERA IN DETTA BLOCK FÃ–R ONLINE:
    /*
    
    */


